var search_data = {"index":{"searchIndex":["moviedata","movietest","access_data()","cal_mean_error()","cal_rms()","find_user_id()","load_data()","most_similar()","movie_rating_average()","movies()","new()","new()","popularity()","popularity_list()","predict()","rating()","rating_count()","run_test()","similarity()","stddev()","to_a()","viewers()"],"longSearchIndex":["moviedata","movietest","moviedata#access_data()","movietest#cal_mean_error()","movietest#cal_rms()","moviedata#find_user_id()","moviedata#load_data()","moviedata#most_similar()","moviedata#movie_rating_average()","moviedata#movies()","moviedata::new()","movietest::new()","moviedata#popularity()","moviedata#popularity_list()","moviedata#predict()","moviedata#rating()","moviedata#rating_count()","moviedata#run_test()","moviedata#similarity()","movietest#stddev()","movietest#to_a()","moviedata#viewers()"],"info":[["MovieData","","MovieData.html","","<p>Zhenyu Han COSI105B Learn Ruby the Hard Way 9/7/2015 Homework for PA-movies\nPart 1\n"],["MovieTest","","MovieTest.html","","<p>MovieTest ########\n"],["access_data","MovieData","MovieData.html#method-i-access_data","()",""],["cal_mean_error","MovieTest","MovieTest.html#method-i-cal_mean_error","()","<p>caluculate the average predication error\n"],["cal_rms","MovieTest","MovieTest.html#method-i-cal_rms","()","<p>calculate the root mean square error of the prediction\n"],["find_user_id","MovieData","MovieData.html#method-i-find_user_id","()","<p>find all the users and put them into a list\n"],["load_data","MovieData","MovieData.html#method-i-load_data","()","<p>load the data\n"],["most_similar","MovieData","MovieData.html#method-i-most_similar","(u)","<p>check similarity of a given u and return a list of top 10\n"],["movie_rating_average","MovieData","MovieData.html#method-i-movie_rating_average","(movie)","<p>this method was designed to help predict the rating by\n\n<pre>calculate the average rating of all the viewers</pre>\n"],["movies","MovieData","MovieData.html#method-i-movies","(user)","<p>reads the user_id and return a list of the movies that he/she watched\n"],["new","MovieData","MovieData.html#method-c-new","()",""],["new","MovieTest","MovieTest.html#method-c-new","(k)",""],["popularity","MovieData","MovieData.html#method-i-popularity","(movie_id)","<p>popularity is simply the number of people watched the movie\n"],["popularity_list","MovieData","MovieData.html#method-i-popularity_list","()","<p>check the popularity by counting the numbers that a certain movie shown in\nmovie_id_list\n"],["predict","MovieData","MovieData.html#method-i-predict","(user, movie)","<p>this predict is calcualted by the average of the viewer&#39;s rating and\n\n<pre>the movie&#39;s average rating</pre>\n"],["rating","MovieData","MovieData.html#method-i-rating","(user, movie)","<p>reads the user_id and movie_id, return the actually rating that the viewer\ngave\n"],["rating_count","MovieData","MovieData.html#method-i-rating_count","(user)","<p>This method was designed to help analyze the distribution of all the\n\n<pre>rating of a certain user</pre>\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k)","<p>simply get the first k predictions and return them as a list\n"],["similarity","MovieData","MovieData.html#method-i-similarity","(user1,user2)","<p>check the similarity of the two users\n"],["stddev","MovieTest","MovieTest.html#method-i-stddev","()","<p>calcualte the standard deviation of the error\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()",""],["viewers","MovieData","MovieData.html#method-i-viewers","(movie)","<p>reads the movie_id and return a list of viewers who watched it\n"]]}}